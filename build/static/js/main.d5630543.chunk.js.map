{"version":3,"sources":["utils/algolia.js","Header.js","utils/firebase.js","components/Topics.js","pages/Home.js","pages/Signin.js","pages/NewPost.js","pages/Post.js","App.js","index.js"],"names":["algolia","algoliasearch","initIndex","Header","auth","getAuth","React","useState","inputValue","setInputValue","user","setUser","useEffect","onAuthStateChanged","currentUser","navigate","useNavigate","Menu","Item","Search","value","onSearchChange","e","search","then","result","console","log","hits","as","Link","to","position","onClick","signOut","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Topics","topics","setTopics","db","getFirestore","ref","collection","fetchData","getDocs","dataRef","data","docs","map","doc","List","selection","divided","size","topic","name","Home","posts","setPosts","postsRef","docRef","id","Container","Grid","GridRow","GridColumn","width","Group","post","Image","src","imageUrl","Content","title","Meta","Icon","topicName","Description","content","Extra","Signin","activeItem","setActiveItem","email","setEmail","password","setPassword","errorMessage","setErrorMessage","widths","active","Form","onSubmit","signInWithEmailAndPassword","userCredential","catch","error","code","Input","label","placeholder","onChange","target","Message","negative","Button","primary","NewPost","storage","getStorage","setTitle","setContent","setTopicName","isLoading","setIsLoading","topicsRef","snapshot","options","text","file","setFile","previewUrl","URL","createObjectURL","addData","addDoc","createdAt","Timestamp","now","author","displayName","uid","storageRef","uploadBytes","getDownloadURL","url","updateDoc","message","floated","basic","htmlFor","type","style","display","files","TextArea","Dropdown","loading","Post","postId","useParams","setPost","getDoc","docSnap","isCollected","collectedBy","includes","Row","Column","Card","wrapped","ui","className","toDate","toLocaleDateString","extra","Segment","updateData","arrayRemove","arrayUnion","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5630543.chunk.js","sourcesContent":["import algoliasearch from \"algoliasearch\";\r\n\r\nconst client = algoliasearch(\"EM7J4USRU5\",\"7959866a9bb34ad031c67f7f3f6de88a\");\r\n\r\nconst algolia = client.initIndex(\"socialcool\");\r\n\r\nexport default algolia;","import { Menu, Search } from 'semantic-ui-react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n// import app from './utils/firebase'\r\nimport { getAuth, signOut } from 'firebase/auth'\r\nimport React from 'react';\r\nimport algolia from './utils/algolia';\r\nfunction Header() {\r\n  const auth = getAuth();\r\n  const [inputValue, setInputValue] = React.useState('')\r\n  const [user, setUser] = React.useState(null)\r\n  React.useEffect(()=>{\r\n    // 監聽 user 登入狀態\r\n    auth.onAuthStateChanged((currentUser)=>{\r\n      setUser(currentUser)  \r\n      // console.log(user)    \r\n    })\r\n  })\r\n\r\n  const navigate = useNavigate();\r\n\r\n  function onSignout() {\r\n    \r\n    // const navigate = useNavigate(); \r\n    // signOut(auth)\r\n    // navigate('/')\r\n    signOut(auth).then(navigate('/'))\r\n  }\r\n\r\n  // algolia search\r\n  function onSearchChange(e,{value}) {\r\n    setInputValue(value)\r\n    algolia.search(value).then((result)=>{\r\n      console.log(result.hits)\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <Menu>\r\n      <Menu.Item>Social Cool</Menu.Item>\r\n      <Menu.Item>\r\n        <Search\r\n        value={inputValue}\r\n        onSearchChange={onSearchChange}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item as={Link} to='/'>Home</Menu.Item>\r\n      <Menu.Item as={Link} to='/new-post'>New Post</Menu.Item>\r\n      {/* 靠右對齊 */}\r\n      <Menu.Menu position=\"right\">\r\n        { user ? (<Menu.Item onClick={onSignout}>Signout</Menu.Item>)\r\n       :\r\n       (<Menu.Item as={Link} to='/signin'>Login/Signup</Menu.Item>)\r\n         \r\n        }\r\n\r\n{/* <Menu.Item onClick={()=>{signOut(auth)}}>Signout</Menu.Item> */}\r\n        \r\n       \r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n}\r\nexport default Header;\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCxMvi4M0Xai8kuqn3r970KLassk-fTlGw\",\r\n  authDomain: \"social-cool-16812.firebaseapp.com\",\r\n  projectId: \"social-cool-16812\",\r\n  storageBucket: \"social-cool-16812.appspot.com\",\r\n  messagingSenderId: \"443839253633\",\r\n  appId: \"1:443839253633:web:105b938de5b05af1f15180\"\r\n};\r\n\r\n\r\n\r\nconst app = initializeApp(firebaseConfig)\r\n// Initialize Firebase\r\nexport default app;","import app from '../utils/firebase';\r\nimport { getFirestore, getDocs, collection } from 'firebase/firestore';\r\nimport React from 'react';\r\nimport { List } from 'semantic-ui-react';\r\n\r\nfunction Topics() {\r\n\r\n  const [topics, setTopics] = React.useState([]);\r\n  const db = getFirestore(app);  \r\n  const ref = collection(db, 'topics');\r\n  \r\n  React.useEffect(() => {\r\n    // https://www.youtube.com/watch?v=jCY6DH8F4oc\r\n    // https://devtrium.com/posts/async-functions-useeffect\r\n    // 用一個 fetchData 變數代表 async 的函數,之後用 fetchData() 執行\r\n    const fetchData = async () => {\r\n      const dataRef = await getDocs(ref);\r\n      const data = dataRef.docs.map((doc) => {\r\n        return doc.data();\r\n      });\r\n\r\n      setTopics(data);\r\n    };\r\n    // 執行\r\n    fetchData();\r\n    // console.log(topics)\r\n  }, []);\r\n  return (\r\n    <List selection divided size='large'>\r\n      {topics.map((topic) => {\r\n        return <List.Item key={topic.name}>\r\n          {topic.name}\r\n          </List.Item>;\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Topics;\r\n","import React from 'react';\r\nimport app from '../utils/firebase';\r\nimport { getFirestore, getDocs, collection } from 'firebase/firestore';\r\nimport {Link } from 'react-router-dom'\r\nimport {\r\n  List,\r\n \r\n  Container,\r\n  Icon,\r\n  Grid,\r\n  GridRow,\r\n  GridColumn,\r\n  Header,\r\n  \r\n  Item,\r\n} from 'semantic-ui-react';\r\nimport Topics from '../components/Topics';\r\n\r\nfunction Home() {\r\n  const [posts, setPosts] = React.useState([]);\r\n  const db = getFirestore(app);\r\n  const postsRef = collection(db, 'posts');\r\n  // 取得所有文章資料\r\n  React.useState(() => {\r\n    \r\n    const fetchData = async () => {\r\n      const dataRef = await getDocs(postsRef);\r\n      const data = dataRef.docs.map((docRef) => {\r\n        const id = docRef.id;\r\n        return {...docRef.data(), id:id};\r\n      });\r\n\r\n      setPosts(data);\r\n      // console.log(data)\r\n    };\r\n    // 執行\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <GridRow>\r\n          <GridColumn width={3}>\r\n            <Header>主題列表</Header>\r\n            <Topics />\r\n          </GridColumn>\r\n          <GridColumn width={10}>\r\n            {/* <Header>文章列表</Header> */}\r\n            <Item.Group>\r\n              {posts.map((post) => {\r\n                return (\r\n                  <Item key={post.id} as={Link} to={`/post/${post.id}`}>\r\n                    <Item.Image src={post.imageUrl} />\r\n                    <Item.Content>\r\n                    <Item.Header>{post.title}</Item.Header>\r\n                    \r\n                    \r\n                      <Item.Meta>\r\n                        <Icon name=\"user circle\"/>\r\n                        {post.topicName}。使用者\r\n                      </Item.Meta>\r\n                      \r\n                      <Item.Description>\r\n                      {post.content}\r\n                    </Item.Description>\r\n                    <Item.Extra>留言 0 。 按讚 0</Item.Extra>\r\n                    </Item.Content>\r\n                  \r\n                  </Item>\r\n                );\r\n              })}\r\n            </Item.Group>\r\n          </GridColumn>\r\n          <GridColumn width={3}>空白</GridColumn>\r\n        </GridRow>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { Container, Form, Menu, Message } from 'semantic-ui-react';\r\nimport React from 'react';\r\nimport '../utils/firebase';\r\nimport { getAuth, signInWithEmailAndPassword} from 'firebase/auth'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst auth = getAuth();\r\n\r\nfunction Signin() {\r\n  \r\n  const navigate = useNavigate();\r\n  // 變數, 設定變數\r\n  const [activeItem, setActiveItem] = React.useState('login');\r\n  const [email, setEmail] = React.useState('mk@gmail.com');\r\n  const [password, setPassword] = React.useState('123456');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  function onSubmit() {\r\n    signInWithEmailAndPassword(auth, email, password).then(userCredential =>{\r\n      console.log(userCredential.user.email)\r\n      // 導到首頁\r\n      navigate('/')\r\n    }).catch(error=>{\r\n      switch(error.code){\r\n        case 'auth/wrong-password':\r\n          setErrorMessage('密碼錯誤')\r\n        console.log(error.code)\r\n        break;\r\n        ;\r\n      }\r\n      \r\n    })\r\n  }\r\n  return (\r\n    <Container>\r\n      {/* widths=2 寬度均分 */}\r\n      <Menu widths={2}>\r\n        {/* active 設定作用中樣式\r\n        用變數 activeItem 做為 active 的條件\r\n        按下項目設定為符合條件的值\r\n        */}\r\n        <Menu.Item\r\n          active={activeItem === 'login'}\r\n          onClick={() => setActiveItem('login')}\r\n        >\r\n          Login\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          active={activeItem === 'signup'}\r\n          onClick={() => setActiveItem('signup')}\r\n        >\r\n          Sign up\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Input\r\n          label=\"帳號\"\r\n          placeholder=\"請輸入帳號\"\r\n          value={email}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n        <Form.Input label=\"密碼\" placeholder=\"請輸入密碼\"\r\n        value={password}\r\n        onChange={(e)=>{\r\n          setPassword(e.target.value)\r\n        }}\r\n        />\r\n        {/* 登入錯誤提示 */}\r\n        {errorMessage && <Message negative>{errorMessage}</Message>}\r\n        <Form.Button primary>\r\n          {/* 依變數值呈現不同文字 */}\r\n          {activeItem === 'login' && 'Login'}\r\n          {activeItem === 'signup' && 'Sign up'}\r\n        </Form.Button>\r\n        {/* <Button secondary>Secondary</Button> */}\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import { Card, Icon, Form, Container, Image, Button } from 'semantic-ui-react';\r\nimport app from '../utils/firebase';\r\nimport { collection, getDocs, getFirestore, addDoc, Timestamp, updateDoc, doc } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\nimport React from 'react';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nimport { getDownloadURL, getStorage,ref, uploadBytes } from \"firebase/storage\";\r\n\r\n\r\nfunction NewPost() {\r\n  const storage = getStorage(app);\r\n  \r\n  const navigate = useNavigate();\r\n  const [topics, setTopics] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [content, setContent] = React.useState('');\r\n  const [topicName, setTopicName] = React.useState('');\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const db = getFirestore(app);\r\n  const topicsRef = collection(db, 'topics');\r\n  // 渲染一次\r\n  React.useEffect(() => {\r\n    // 取得資料\r\n    const fetchData = async () => {\r\n      const snapshot = await getDocs(topicsRef);\r\n      const data = snapshot.docs.map((doc) => {\r\n        return doc.data();\r\n      });\r\n      // 把資料設給 React state\r\n      setTopics(data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // console.log(topics);\r\n  const options = topics.map((topic) => {\r\n    return { text: topic.name, value: topic.name };\r\n  });\r\n\r\n  const [file, setFile] = React.useState(null);\r\n  const previewUrl = file\r\n    ? URL.createObjectURL(file)\r\n    : 'https://react.semantic-ui.com/images/wireframe/image.png';\r\n \r\n  function onSubmit() {\r\n    setIsLoading(true)\r\n    const auth = getAuth()\r\n    // 新增資料\r\n    const addData = async () => {\r\n      await addDoc(collection(db, 'posts'), {\r\n        title: title,\r\n        content: content,\r\n        topicName: topicName,\r\n        createdAt: Timestamp.now(),\r\n        author:{\r\n          displayName: auth.currentUser.displayName,\r\n          uid: auth.currentUser.uid,\r\n          email: auth.currentUser.email\r\n        }\r\n      }).then((docRef)=>{\r\n        // 上傳圖片\r\n        const storageRef = ref(storage,'post-images/'+docRef.id);\r\n        uploadBytes(storageRef, file).then(() => {\r\n          getDownloadURL(storageRef).then(url=>{\r\n            // 設定 imageUrl 欄位值\r\n            updateDoc(doc(db, \"posts\", docRef.id), {\r\n              imageUrl: url             \r\n            });            \r\n          })\r\n          \r\n        }).catch(error=>{\r\n          console.log(error.message)\r\n        });\r\n\r\n        setIsLoading(false)\r\n        navigate('/')\r\n        \r\n      });\r\n    };\r\n\r\n    addData();\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={onSubmit}>\r\n        {/* 放預覽圖片 */}\r\n        {/* <Image src=\"https://fakeimg.pl/300/\" floated='left' size=\"small\" /> */}\r\n        <Image src={previewUrl} floated=\"left\" size=\"small\" />\r\n        {/* as=\"label\" htmlFor 才有作用 */}\r\n        <Button basic htmlFor=\"post-image\" as=\"label\">\r\n          上傳圖片\r\n        </Button>\r\n        {/* 上傳檔案元件 */}\r\n        <Form.Input\r\n          type=\"file\"\r\n          id=\"post-image\"\r\n          style={{ display: 'none' }}\r\n          onChange={(e) => {\r\n            setFile(e.target.files[0]);\r\n          }}\r\n        />\r\n        <Form.Input\r\n          placeholder=\"請輸入標題\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <Form.TextArea\r\n          placeholder=\"內容\"\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Form.Dropdown\r\n          onChange={(e,{value}) => setTopicName(value)}\r\n          placeholder=\"主題\"\r\n          selection\r\n          options={options}\r\n        ></Form.Dropdown>\r\n        <Form.Button loading={isLoading}>送出</Form.Button>\r\n      </Form>\r\n      {/* <Card>\r\n        <Card.Content>\r\n          <Card.Header>Mark</Card.Header>\r\n          <Card.Meta>\r\n            <span className=\"date\">Joined in 2015</span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n            Matthew is a musician living in Nashville.\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <a>\r\n            <Icon name=\"user\" />\r\n            22 Friends\r\n          </a>\r\n        </Card.Content>\r\n      </Card> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NewPost;\r\n","import { useParams } from 'react-router-dom';\r\nimport app from '../utils/firebase';\r\nimport {\r\n  getFirestore,\r\n  getDoc,\r\n  doc,\r\n  updateDoc,\r\n  arrayUnion,\r\n  arrayRemove,\r\n} from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nimport React from 'react';\r\nimport { Container, Card, Icon, Image, Grid, Segment } from 'semantic-ui-react';\r\nimport Topics from '../components/Topics';\r\n\r\nfunction Post() {\r\n  // 取得網址參數\r\n  const { postId } = useParams();\r\n  const [post, setPost] = React.useState({});\r\n  // const [isCollected, setIsCollected] = React.useState(false);\r\n  const db = getFirestore(app);\r\n\r\n  // const postsRef = collection(db, 'posts');\r\n\r\n  React.useEffect(() => {\r\n    // const auth = getAuth();\r\n    // const uid = auth.currentUser.uid;\r\n    const fetchData = async () => {\r\n      const docRef = doc(db, 'posts', postId);\r\n      await getDoc(docRef).then((docSnap) => {\r\n        console.log('ddd');\r\n        setPost(docSnap.data());\r\n        console.log(post);\r\n        // // 判斷是否已收藏\r\n        // setIsCollected(post.collectedBy?.includes('uid'));\r\n        // console.log(isCollected);\r\n        // console.log(post.collectedBy.includes('uid'))\r\n      });\r\n\r\n      // if (docSnap.exists()) {\r\n\r\n      //   console.log('Document data:', docSnap.data());\r\n\r\n      // } else {\r\n      //   // doc.data() will be undefined in this case\r\n      //   console.log('No such document!');\r\n      // }\r\n    };\r\n    fetchData();\r\n    // console.log(post);\r\n  }, []);\r\n\r\n  const isCollected = post.collectedBy.includes('uid')\r\n\r\n  function toggleCollected() {\r\n    const updateData = async () => {\r\n      const docRef = doc(db, 'posts', postId);\r\n     \r\n      console.log(isCollected);\r\n      console.log('to');\r\n      if (isCollected) {\r\n        await updateDoc(docRef, { collectedBy: arrayRemove('uid') });\r\n      } else {\r\n        await updateDoc(docRef, { collectedBy: arrayUnion('uid') });\r\n      }\r\n\r\n      // const docSnap = await getDoc(docRef);\r\n      // setPost(docSnap.data());\r\n    };\r\n    updateData();\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column width={3}>\r\n            <Topics />\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Card>\r\n              <Image src={post.imageUrl} wrapped ui={false} />\r\n              <Card.Content>\r\n                <Card.Header>{post.title}</Card.Header>\r\n                <Card.Meta>\r\n                  <span className=\"date\">\r\n                    Created at {post.createdAt?.toDate().toLocaleDateString()}\r\n                  </span>\r\n                </Card.Meta>\r\n                <Card.Description>{post.content}</Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <a>\r\n                  <Icon name=\"user\" />\r\n                  22 Friends\r\n                </a>\r\n                <Segment>\r\n                  <Icon\r\n                    name=\"bookmark outline link\"\r\n                    onClick={toggleCollected}\r\n                  />\r\n                </Segment>\r\n              </Card.Content>\r\n            </Card>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\nexport default Post;\r\n","import Header from './Header';\r\n// Header 元件裏有用到 Link 需要包在 BrowserRouter\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport  Home  from './pages/Home';\r\nimport  Signin  from './pages/Signin';\r\nimport  NewPost  from './pages/NewPost';\r\nimport Post from './pages/Post';\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      {/* 針對不同路由,指定不同元件 */}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/signin\" element={<Signin />} />\r\n        <Route path=\"/new-post\" element={<NewPost />} />\r\n        <Route path=\"/post/:postId\" element={<Post />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport App from './App';\r\n\r\n// 將 App 元件放到 root\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}